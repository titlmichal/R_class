selfe = seq(1, 4, length.out = 1000),
optim = 17
) %>% as_tibble()
# Hodnoty prediktorů, pro které chceme zjistit predikované hodnoty
new_data <- expand.grid(
pohlavi = c("muzske", "zenske"),
vekr = 13,
gpa = 2,
duv_v = 2.7,
duv_r = 2.8,
selfe = seq(1, 4, length.out = 1000), #daty si generujeme 1000 hodnot 1-4
optim = 17
) %>% as_tibble()
View(new_data)
# Intervaly spolehlivosti
ci <- broom::augment(fit_2,
newdata = new_data,
interval = "confidence")
#doplním predikci dat k novým řádkům
ci <- ci %>%
rename(ci_lower = .lower,
ci_upper = .upper)
ci
# Graficky
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +
geom_ribbon(aes(ymin = ci_lower,
ymax = ci_upper),
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(1, 4)) +
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
# Predikční intervaly
pi <- broom::augment(fit_2,
newdata = new_data,
interval = "prediction")
pi <- pi %>%
rename(pi_lower = .lower,
pi_upper = .upper)
cpi <- ci %>%
left_join(pi)
cpi
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,
ymax = ci_upper),
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(0.5, 4)) +
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,
ymax = ci_upper),
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(0.5, 4)) +
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
cpi
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5)
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3)
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue")
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2)
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(0.5, 4))
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(0.5, 4)) +
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
ci %>%
ggplot(aes(x = selfe,
y = .fitted))
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3)
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(1, 4)) +
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
ci %>%
ggplot(aes(x = selfe,
y = .fitted))
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3)
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue")
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2)
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(1, 4))
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(1, 4)) +
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +       #zobrazení predikce
facet_wrap(~pohlavi, nrow = 2)
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +       #zobrazení predikce
facet_wrap(~pohlavi, nrow = 2) +  #rozdělení dle pohlaví
coord_cartesian(ylim = c(1, 4))
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +       #zobrazení predikce
facet_wrap(~pohlavi, nrow = 2)
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +       #zobrazení predikce
facet_wrap(~pohlavi, nrow = 2) +  #rozdělení dle pohlaví
coord_cartesian(ylim = c(1, 4))
# Graficky
ci %>%
ggplot(aes(x = selfe,
y = .fitted)) +      #zde jen predikované hodnoty
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue",
linewidth = 1) +       #zobrazení predikce
facet_wrap(~pohlavi, nrow = 2) +  #rozdělení dle pohlaví
coord_cartesian(ylim = c(1, 4)) + #nastavení
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
cpi %>%
ggplot(aes(selfe, .fitted)) +
geom_ribbon(aes(ymin = pi_lower,
ymax = pi_upper),
fill = "pink",
alpha = .5) +
geom_ribbon(aes(ymin = ci_lower,   #geom_ribbon vytváří oblast
ymax = ci_upper),  #potřebuje proto argumenty rozpětí
fill = "blue",
alpha = .3) +
geom_line(color = "blue") +
facet_wrap(~pohlavi, nrow = 2) +
coord_cartesian(ylim = c(0.5, 4)) +
labs(x = "Self-esteem",
y = "Predikovaná depresivita")
# Kategorická proměnná jako moderátor
math <- read_csv("https://is.muni.cz/go/oqd8xr")
math
math <- math %>%
mutate(gender = factor(gender,
levels = c(0, 1),
labels = c("Male", "Female")))
math
summary(math)
fit_1 <- lm(math ~ gender + training,
data = math)
summary(fit_1)
summary(fit_2)
summary(fit_1)
summary(fit_2)
#BEZ moderace
fit_2 <- lm(math ~ gender * training,
data = math)
summary(fit_2)
summary(fit_1)
summary(fit_2)
math %>%
ggplot(aes(x = training,
y = math,
color = gender,
fill = gender)) +
geom_point(size = 3) +
geom_smooth(method = "lm")
summary(fit_2)
# Reparametrizace modelu, pokud chceme znát tzv. simple effects
math <- math %>%
mutate(
m = as.integer(gender == "Male"),
f = as.integer(gender == "Female"),
m_train = m*training,
f_train = f*training
)
fit_3 <- lm(math ~ -1 + m + f + m_train + f_train,
data = math)
summary(fit_3)
#zobrazení moderace
math %>%
ggplot(aes(x = training,
y = math,
color = gender,
fill = gender)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
scale_fill_manual(values = c("lightblue", "pink"))
#zobrazení moderace
math %>%
ggplot(aes(x = training,
y = math,
color = gender,
fill = gender)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
scale_fill_manual(values = c("lightblue", "pink")) +
scale_color_manual(values = c("blue", "pink"))
#zobrazení moderace
math %>%
ggplot(aes(x = training,
y = math,
color = gender,
fill = gender)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
scale_fill_manual(values = c("lightblue", "lightpink")) +
scale_color_manual(values = c("blue", "pink"))
# Reparametrizace modelu, pokud chceme znát tzv. simple effects
math <- math %>%
mutate(
m = as.integer(gender == "Male"),
f = as.integer(gender == "Female"),
m_train = m*training,
f_train = f*training
)
fit_3 <- lm(math ~ -1 + m + f + m_train + f_train,
data = math)
summary(fit_3)
# Spojitá proměnná jako moderátor
depress <- read_csv("https://is.muni.cz/go/p5psox")
depress
summary(depress)
# Vycentrování prediktorů
depress <-  depress %>%
mutate(
stress_cnt = stress - 5,
support_cnt = support - 5,
)
fit_1 <- lm(depress ~ stress_cnt + support_cnt,
data = depress)
fit_2 <- lm(depress ~ stress_cnt * support_cnt,
data = depress)
summary(fit_1)
summary(fit_2)
#jak zobrazit spojitý moderátor --> rozdělení do skupin
#--> diskretizace --> fce cut_number() na určitý počet skupin
# Diskretizace support
depress <- depress %>%
mutate(
support_cat = cut_number(support, n = 3)
)
depress %>%
ggplot(aes(stress, depress,
color = support_cat,
fill = support_cat)) +
geom_jitter(size = 3) +
geom_smooth(method = "lm")
depress %>%
ggplot(aes(stress, depress,
color = support_cat,
fill = support_cat)) +
geom_jitter(size = 3) +
geom_smooth(method = "lm")
summary(depress)
# Hodnoty prediktorů, pro které chceme zjistit predikované hodnoty
new_data <- expand.grid(
stress_cnt = seq(-4, 5, length.out = 1000),
support_cnt = c(-2.5, 0, 2.5)
) %>%
as_tibble()
# Hodnoty prediktorů, pro které chceme zjistit predikované hodnoty
new_data <- expand.grid(
stress_cnt = seq(-4, 5, length.out = 1000),
support_cnt = c(-2.5, 0, 2.5)
) %>%
as_tibble()
ci <- broom::augment(fit_2,
newdata = new_data,
interval = "confidence")
ci <- ci %>%
mutate(
group = factor(support_cnt,
labels = c(2.5, 5.0, 7.5))
)
ci %>%
ggplot(aes(x = stress_cnt + 5,
y = .fitted,
color = group,
fill = group)) +
geom_ribbon(aes(ymin = .lower,
ymax = .upper),
alpha = .3) +
geom_line() +
labs(x = "Stress",
y = "Predikovaná depresivita",
color = "Sociální podpora",
fill = "Sociální podpora")
#potřeba převést na long-format --> fce pivot_longer
df %>%
pivot_longer(bfi_ext:bfi_int)
#potřeba převést na long-format --> fce pivot_longer
df %>%
pivot_longer(bfi_ext:bfi_int,
names_to = "variable")
# Pracujte s tímto datasetem
df <- read_csv2("https://is.muni.cz/go/g26j7j")
#potřeba převést na long-format --> fce pivot_longer
df <- read_csv2("https://is.muni.cz/go/g26j7j")
df %>%
pivot_longer(bfi_ext:bfi_int,
names_to = "variable")
df_long <- df %>%
pivot_longer(bfi_ext:bfi_int,
names_to = "variable")
df_long %>%
ggplot() +
stat_summary(fun = mean,  #chci průměry - nejsou v datech --> stat_summary()
geom = "point",    #fun = co_chci_spočítat
aes(x = factor(grade),  #aes = mapování
y = value,
color = gender)) +
facet_wrap(~variable)
df_long %>%
ggplot() +
stat_summary(fun = mean,  #chci průměry - nejsou v datech --> stat_summary()
geom = "point",    #fun = co_chci_spočítat
aes(x = factor(grade),  #aes = mapování
y = value,
color = gender)) + #tohle zobrazí jen průměry skupin
stat_summary(fun.data = mean_cl_normal) +
facet_wrap(~variable)
df_long %>%
ggplot(aes(x = factor(grade),  #aes = mapování
y = value,
color = gender)) +
stat_summary(fun = mean,  #chci průměry - nejsou v datech --> stat_summary()
geom = "point"    #fun = co_chci_spočítat
) + #tohle zobrazí jen průměry skupin
stat_summary(fun.data = mean_cl_normal) +
facet_wrap(~variable)
df_long %>%
ggplot(aes(x = factor(grade),  #aes = mapování
y = value,
color = gender),
position = position_dodge(width = 0.2)) +
stat_summary(fun = mean,  #chci průměry - nejsou v datech --> stat_summary()
geom = "point"    #fun = co_chci_spočítat
) + #tohle zobrazí jen průměry skupin
stat_summary(fun.data = mean_cl_normal) +
facet_wrap(~variable)
df_long %>%
ggplot(aes(x = factor(grade),  #aes = mapování
y = value,
color = gender)) +
stat_summary(fun = mean,  #chci průměry - nejsou v datech --> stat_summary()
geom = "point"    #fun = co_chci_spočítat
) + #tohle zobrazí jen průměry skupin
stat_summary(fun.data = mean_cl_normal,
position = position_dodge(width = 0.2)) +
facet_wrap(~variable)
df_long %>%
ggplot(aes(x = factor(grade),  #aes = mapování
y = value,
color = gender)) +
stat_summary(fun = mean,  #chci průměry - nejsou v datech --> stat_summary()
geom = "line",    #fun = co_chci_spočítat
mapping = aes(group = gender,
y = value)) + #tohle zobrazí jen průměry skupin
stat_summary(fun.data = mean_cl_normal,
position = position_dodge(width = 0.2)) +
facet_wrap(~variable)
