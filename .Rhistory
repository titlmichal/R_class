library(tidyverse)
# Načtení dat
df <- read_csv2("https://is.muni.cz/el/fss/podzim2024/PSYb2320/um/datasets/personality_all.csv")
df
View(df)
View(df)
glimpse(df)
df
# Načtení dat i se správnou definíc missing
df <- read_csv2("https://is.muni.cz/el/fss/podzim2024/PSYb2320/um/datasets/personality_all.csv"
, na = c("", "-99"))
df
distinct(df, gender)
df %>%
mutate(
gender = factor((gender))
)
df %>%
distinct(gender)
df <- df %>%
mutate(
gender = factor((gender))
)
df
df <- df %>%
mutate(
gender = factor(gender,
levels = c("M", "F"))
)
df
df <- df %>%
mutate(
gender = factor(gender,
levels = c("M", "F"),
labels = c("Boy", "Girl"))
)
df
# Kombinace grade a class
df %>%
mutate(
grade_class = str_c(grade, class)
)
# Kombinace grade a class
df %>%
mutate(
grade_class = str_c(grade, class),
.after = class
)
# Kombinace grade a class
df <- df %>%
mutate(
grade_class = str_c(grade, class),
.after = class
)
df
# Výběr položek začínajících na "nfc"
df %>%
select(starts_with("nfc"))
# Výběr položek začínajících na "nfc
names(df)
df %>%
select(starts_with("nfc"))
nfc_items <- df %>%
select(starts_with("nfc"))
# Ověření reliability škál NFC
reliability(nfc_items)
# Ověření reliability škál NFC
nfc_items %>%
psych::alpha()
nfc_items %>%
summary()
# Položky NFC 10 až 16 jsou reverzní
# Rekódování hodnot položku po položce ... by bylo dost pracné
...
# Vektor nfc_reversed s reverzními položkami NFC (10 až 16)
df %>%
select(nfc_10:nfc_16)
#někdy ale položky nejdou tak hezky za
str_c("nfc_", 10:16)
#někdy ale položky nejdou tak hezky za
reverse_items <- ("nfc_", 10:16)
#někdy ale položky nejdou tak hezky za
reverse_items <- str_c("nfc_", 10:16)
reverse_items
# Použití funkce all_of()
df %>%
select(all_of(reverse_items))
# A co reverzní položky IPIP?
# Jedná se o typo položky
nums <- c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 29, 30, 32, 34,
36, 38, 39, 44, 46, 49)
nums
# Vytvoření vektoru s ipip_reversed s reverzními položkami IPIP
# Využití funkce str_c()
# a také funkce str_pad()
ipip_reversed <- str_c("ipip_", nums)
ipip_reversed
nfc_reversed <- reverse_items
nfc_reversed
str_pad(1:9)
str_pad(, width = 2)
str_pad(, width = 2, pad = 0)
str_pad(1:9, width = 2, pad = 0)
ipip_reversed <- str_c("ipip_", str_pad(nums, width = 2, pad = 0))
ipip_reversed
# Kombinace všech reverzních položek do jednoho vektoru reversed_items
reverse_items <- c(nfc_reversed, ipip_reversed)
# Uložení nerekódovaného datasetu do nového objektu not_recoded
not_recoded <- df
# Finální rekódování všech položek
df %>%
mutate(
across(reverse_items)
)
# Finální rekódování všech položek
df %>%
mutate(
across(all_of(reverse_items))
)
# Finální rekódování všech položek
df %>%
mutate(
across(all_of(reverse_items),  #across a all_of na volbu a uplatnění
~5 - .x)
)
# Finální rekódování všech položek
df %>%
mutate(
across(all_of(reverse_items),  #across a all_of na volbu a uplatnění
~5 - .x)     #tady vlnka (btw altgr+;+1) je tam pro custom fci
# a to .x je tam jako placeholder hodnot
) %>%
select(all_of(reverse_items))
df %>%
mutate(
across(all_of(reverse_items),
~5 - .x)
)
# Finální rekódování všech položek
df %>%
mutate(
across(all_of(reverse_items),  #across a all_of na volbu a uplatnění
~5 - .x)     #tady vlnka (btw altgr+;+1) je tam pro custom fci
# a to .x je tam jako placeholder hodnot
) %>%
select(all_of(reverse_items))
df <- df %>%
mutate(
across(all_of(reverse_items),
~5 - .x)
)
reverse_items
df %>%
select(all_of(reverse_items))
str_c("nfc_",
str_pad(seq(1, 16), pad = 0, width = 2))
# Co kdybychom si vytvořili vlastní funkci item_range pro vytváření
# jmen položek, která:
# - doplní nulu k 1ciferným jménům
item_range <- function(prefix, suffix) {
str_c(prefix,
str_pad(suffix, pad = 0, width = 2))
}
# Příklad použití této funkce
item_range("nfc_", 1:16)
df %>%
select(nfc_01:nfc_16) %>%
psych::alpha()
# Co kdybychom si vytvořili list "items" s názvy položek jednotlivých škál
# NFC: 1 až 16
# Extraversion: 1  6 11 16 21 26 31 36 41 46
# Agreeableness: 2  7 12 17 22 27 32 37 42 47
# Conscientiousness: 3  8 13 18 23 28 33 38 43 48
# Emotional stability: 4  9 14 19 24 29 34 39 44 49
# Intellect: 5 10 15 20 25 30 35 40 45
nfc <- item_range("nfc_item", 1:16)
# Co kdybychom si vytvořili list "items" s názvy položek jednotlivých škál
# NFC: 1 až 16
# Extraversion: 1  6 11 16 21 26 31 36 41 46
# Agreeableness: 2  7 12 17 22 27 32 37 42 47
# Conscientiousness: 3  8 13 18 23 28 33 38 43 48
# Emotional stability: 4  9 14 19 24 29 34 39 44 49
# Intellect: 5 10 15 20 25 30 35 40 45
nfc <- item_range("nfc_tem", 1:16)
ext <- item_range("ipip_", c(1, 6, 11, 16, 21, 26, 31, 36, 41, 46))
agr <- item_range("ipip_", c(2, 7, 12, 17, 22, 27, 32, 37, 42, 47))
items <- list(
nfc = nfc,
ext = ext,
agr = agr
)
items$nfc
con <- item_range("ipip_", c(3, 8, 13, 18, 23, 28, 33, 38, 43, 48))
)
items <- list(
nfc = nfc,
ext = ext,
agr = agr,
con = con
)
items$con
# Funkce row_mean() pro výpočet celkových skórů jako průměr položek
row_mean <- function(..., max.na = 0) {
data <- pick(...)
n_miss <- data %>%
is.na() %>%
rowSums()
output <- data %>%
rowMeans(na.rm = TRUE)
output[n_miss > max.na] <- NA_real_
return(output)
}
df
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc))
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc)),
.
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc))
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc))
)
# Co kdybychom si vytvořili list "items" s názvy položek jednotlivých škál
# NFC: 1 až 16
# Extraversion: 1  6 11 16 21 26 31 36 41 46
# Agreeableness: 2  7 12 17 22 27 32 37 42 47
# Conscientiousness: 3  8 13 18 23 28 33 38 43 48
# Emotional stability: 4  9 14 19 24 29 34 39 44 49
# Intellect: 5 10 15 20 25 30 35 40 45
nfc <- item_range("nfc_", 1:16)
items <- list(
nfc = nfc,
ext = ext,
agr = agr,
con = con
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc))
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc)),
.after = grade_class
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc, max.na = 6)),
.after = grade_class
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc, max.na = 6)),
.after = grade_class
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc), max.na = 6),
.after = grade_class
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df %>%
mutate(
nfc = row_mean(all_of(items$nfc), max.na = 6),
ext = row_mean(all_of(items$ext), max.na = 6),
agr = row_mean(all_of(items$agr), max.na = 6),
.after = grade_class
)
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df <-  %>%
# Upltnění funkce row_mean() pro výpočet celkových skórů
# nfc, ext, con
# Jejich umístění někde na začátek
df <- df  %>%
mutate(
nfc = row_mean(all_of(items$nfc), max.na = 6),
ext = row_mean(all_of(items$ext), max.na = 6),
agr = row_mean(all_of(items$agr), max.na = 6),
.after = grade_class
)
#průměr pro všechny nfc proměnné s tolerancí NA až 6
df
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc)
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE)
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
.by = c(grade, gender)
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = stdev(nfc),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = dev(nfc),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = sd(nfc, na.rm = TRUE),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = sd(nfc, na.rm = TRUE),
ct_nfc = count(nfc),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = sd(nfc, na.rm = TRUE),
ct_nfc = count(nfc),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = sd(nfc, na.rm = TRUE),
ct_nfc = n(nfc),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = sd(nfc, na.rm = TRUE),
valid = sum(is.na),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = sd(nfc, na.rm = TRUE),
valid = sum(!is.na(nfc)),
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
is.na(1:9, NA, NA)
is.na(c(1:9, NA, NA))
!is.na(c(1:9, NA, NA))
sum(!is.na(c(1:9, NA, NA)))
df %>%
group_by(grade, gender) %>%
summarise(
accros(nfc:agr,
list(M = ~mean(.x, na.rm = TRUE),
SD = ~sd(.x, na.rm = TRUE)))
)
df %>%
group_by(grade, gender) %>%
summarise(
across(nfc:agr,
list(M = ~mean(.x, na.rm = TRUE),
SD = ~sd(.x, na.rm = TRUE)))
)
# Výpočet deskriptivních statistik v závislosti na ročníku a pohlaví
# M, SD, skew
df %>%
summarise(
M_nfc = mean(nfc, na.rm = TRUE),
SD_nfc = sd(nfc, na.rm = TRUE),
valid = sum(!is.na(nfc)), #n() by vrátila řádky, zde NOT na suma
.by = c(grade, gender) #když bych to předtím do group_by(), tak je to stejný
)
df %>%
group_by(grade, gender) %>%
summarise(
across(nfc:agr,
list(M = ~mean(.x, na.rm = TRUE),
SD = ~sd(.x, na.rm = TRUE)))
)
df %>%
group_by(grade, gender) %>% #...groupnu
summarise(                  #...shrnu
across(nfc:agr,           #...napříč kterými sloupci to chci
list(M = ~mean(.x, na.rm = TRUE),  #...list jakých metrik chci
SD = ~sd(.x, na.rm = TRUE), #(víc fcí --> proto ten list)
skew = psych::skew()))  #btw skew má na.rm default TRUE
)
df %>%
group_by(grade, gender) %>% #...groupnu
summarise(                  #...shrnu
across(nfc:agr,           #...napříč kterými sloupci to chci
list(M = ~mean(.x, na.rm = TRUE),  #...list jakých metrik chci
SD = ~sd(.x, na.rm = TRUE), #(víc fcí --> proto ten list)
skew = psych::skew(.x)))  #btw skew má na.rm default TRUE
)
df %>%
group_by(grade, gender) %>% #...groupnu
summarise(                  #...shrnu
across(nfc:agr,           #...napříč kterými sloupci to chci
list(M = ~mean(.x, na.rm = TRUE),  #...list jakých metrik chci
SD = ~sd(.x, na.rm = TRUE), #(víc fcí --> proto ten list)
skew = ~psych::skew(.x)))  #btw skew má na.rm default TRUE
)
# A co kvantily s pomocí funkce quantile()
# Se summarise() by to šlo, ale máme varování
df %>%
summarise(
q = quantile(nfc, probs = c(0, .25, .5, .75, 1))
)
# A co kvantily s pomocí funkce quantile()
# Se summarise() by to šlo, ale máme varování
df %>%
summarise(
q = quantile(nfc, probs = c(0, .25, .5, .75, 1),
na.rm = TRUE)
)
df %>%
group_by(grade, gender) %>%
summarise(
q = quantile(nfc, probs = c(0, .25, .5, .75, 1),
na.rm = TRUE)
)
df %>%
group_by(grade, gender) %>%
reframe(
q = quantile(nfc, probs = c(0, .25, .5, .75, 1),
na.rm = TRUE)
)
# A co kvantily s pomocí funkce quantile()
# Se summarise() by to šlo, ale máme varování
df %>%
summarise(
q = quantile(nfc, probs = c(0, .25, .5, .75, 1), #po 25% --> kvartily
na.rm = TRUE)
)
df %>%
group_by(grade, gender) %>%
reframe(
q = quantile(nfc, probs = c(0, .25, .5, .75, 1),
na.rm = TRUE)
)
df %>%
group_by(grade, gender) %>%
reframe(
probs = c(0, .25, .5, .75, 1),
q = quantile(nfc, probs = c(0, .25, .5, .75, 1),
na.rm = TRUE)
)
