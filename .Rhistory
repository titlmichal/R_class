ggplot(
data = data,
mapping = aes(x = flipper_length_mm, group = species, fill = species, color = species)
) + geom_density(alpha = 0.5, linewidth = 1)
# Pomocí grafu hustoty pravděpodobnosti zobrazte rozdělení proměnné
# flipper_length_mm a barevně rozlište jednotlivé druhy (species),
# a to jak barvou obrysů (color), tak výplně (fill)
# Argumentem linewidth zvyšte tloušťku křivek na jeden bod
# a argumentem alpha učiňte výplň poloprůhlednou
ggplot(
data = data,
mapping = aes(x = flipper_length_mm, group = species, fill = species
, color = species)
) + geom_density(alpha = 0.5, linewidth = 1)
# Pomocí grafu hustoty pravděpodobnosti zobrazte rozdělení proměnné
# flipper_length_mm a barevně rozlište jednotlivé druhy (species),
# a to jak barvou obrysů (color), tak výplně (fill)
# Argumentem linewidth zvyšte tloušťku křivek na jeden bod
# a argumentem alpha učiňte výplň poloprůhlednou
ggplot(
data = data,
mapping = aes(x = flipper_length_mm, group = species, fill = species
)
) + geom_density(alpha = 0.5, linewidth = 1, color = species)
# Pomocí grafu hustoty pravděpodobnosti zobrazte rozdělení proměnné
# flipper_length_mm a barevně rozlište jednotlivé druhy (species),
# a to jak barvou obrysů (color), tak výplně (fill)
# Argumentem linewidth zvyšte tloušťku křivek na jeden bod
# a argumentem alpha učiňte výplň poloprůhlednou
ggplot(
data = data,
mapping = aes(x = flipper_length_mm, group = species, fill = species
, color = species)
) + geom_density(alpha = 0.5, linewidth = 1)
penguins
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = sex)
) + geom_bar()
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = sex)
) + geom_stacked()
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = sex)
) + geom_bar()
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = sex, fill = sex)
) + geom_bar()
help(geom_bar)
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = sex, fill = sex)
) + geom_bar()
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = species, fill = sex)
) + geom_bar()
# Když nastavíme v v rámci geom_bar() argument position na hodnotu "fill"
# zobrazí se nám relativní četnosti v rámci každé kategorie na ose X
ggplot(penguins, aes(x = island, fill = species)) +
geom_bar(position = "fill")
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = species, fill = sex)
) + geom_bar(position = "fill")
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = species, fill = sex)
) + geom_bar(
#position = "fill"
)
# Pomocí skládaného sloupcového grafu ověřte, zda je relativní rozdělení pohlaví
# u každého druhu tučňáka přibližně 50:50
ggplot(
data = data,
mapping = aes(x = species, fill = sex)
) + geom_bar(
position = "fill"
)
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm)
) + geom_dotplot()
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm)
) + geom_dotplot(group = species)
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm)
) + geom_histogram()
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm)
) + geom_point()
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, group = species)
) + geom_point()
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, group = species)
) + geom_point(shape = species)
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, group = species)
) + geom_point(shape = "species")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, group = species
, shape = species)
) + geom_point()
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point()
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 5)
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2)
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2, title = "Helo")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
, title = "Helo"
) + geom_point(size = 2)
+ labs(title = "Helo")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2)
+ labs(title = "Test")
help(labs)
+ labs(caption = "This is a graph")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) %>%
+ labs(caption = "This is a graph")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) + labs(caption = "This is a graph")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) + labs(title = "This is a graph")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) + labs(title = "This is a graph")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) + labs(caption = "This is a graph")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) + labs(caption = "Obecně se zdá, že druh Gentoo
má méně tlusté zobáky")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) + labs(caption =
"Obecně se zdá, že druh Gentoo má méně tlusté zobáky")
# Pomocí bodového grafu ukažte vztah mezi délkou (bill_length_mm) a
# tloušťkou zobáku (bill_depth_mm)
# barvou i tvarem odlište jednotlivé druhy tučňáků
# a komentářem popište, čím se jednotlivé druhy vyznačují
# (v grafu by to mělo být jasně vidět)
ggplot(
data = data,
mapping = aes(x = bill_length_mm, y = bill_depth_mm, color = species
, shape = species)
) + geom_point(size = 2) + labs(caption =
"Obecně se zdá, že druh Gentoo má méně tlusté, spíše delší zobáky.
Adelie mívajá zobáky tlusté, ale kratší. Chinstrap vyhrává na poli
délky i tloušťky.")
glimpse(penguins)
# Pomocí boxplotu zobrazte vztah mezi druhem tučňáka a jeho tělesnou
# hmotností. Pomocí barvy (color) rozlište pohlaví tučňáka.
ggplot(
data = data,
mapping = aes(x = species, y = body_mass_g)
)
# Pomocí boxplotu zobrazte vztah mezi druhem tučňáka a jeho tělesnou
# hmotností. Pomocí barvy (color) rozlište pohlaví tučňáka.
ggplot(
data = data,
mapping = aes(x = species, y = body_mass_g)
) + geom_boxplot()
# Pomocí boxplotu zobrazte vztah mezi druhem tučňáka a jeho tělesnou
# hmotností. Pomocí barvy (color) rozlište pohlaví tučňáka.
ggplot(
data = data,
mapping = aes(x = species, y = body_mass_g, color = species)
) + geom_boxplot()
# Pomocí boxplotu zobrazte vztah mezi druhem tučňáka a jeho tělesnou
# hmotností. Pomocí barvy (color) rozlište pohlaví tučňáka.
ggplot(
data = data,
mapping = aes(x = species, y = body_mass_g, color = sex)
) + geom_boxplot()
library(nycflights13)
flights
glimpse(flights)
# - letěly do Houstonu (destinace IAH nebo HOU)
flights %>%
filter(dest in ("IAH", "HOU"))
# - letěly do Houstonu (destinace IAH nebo HOU)
flights %>%
filter(dest in c("IAH", "HOU"))
# - letěly do Houstonu (destinace IAH nebo HOU)
flights %>%
filter(dest = "IAH" | dest = "HOU")
# - letěly do Houstonu (destinace IAH nebo HOU)
flights %>%
filter(dest = 'IAH' | dest = 'HOU')
# - letěly do Houstonu (destinace IAH nebo HOU)
flights %>%
filter(dest = 'IAH' | dest = 'HOU')
# - letěly do Houstonu (destinace IAH nebo HOU)
flights %>%
filter(dest %in% c("IAH", "HOU"))
# - letěly v letních měsících (červenec až září)
flights %>%
filter(month between(7,9))
# - letěly v letních měsících (červenec až září)
flights %>%
filter(month %between% (7,9))
# - letěly v letních měsících (červenec až září)
flights %>%
filter(month %between% c(7,9))
# - letěly v letních měsících (červenec až září)
flights %>%
filter(between(month, 7, 9))
# - dorazily se zpožděním větším než dvě hodiny, i když odletěly bez zpoždění
flights %>%
filter(dep_delay == 0 , arr_delay > 120)
help(arrange)
# Seřaďte dataset flights podle zpoždění při odletu (sestupně) a zároveň
# podle zpoždění při příletu (vzestupně)
flights %>%
arrange(desc(dep_delay), arr_delay)
# Seřaďte dataset flights podle zpoždění při odletu (sestupně) a zároveň
# podle zpoždění při příletu (vzestupně)
flights %>%
arrange(desc(dep_delay), asc(arr_delay))
# Seřaďte dataset flights podle zpoždění při odletu (sestupně) a zároveň
# podle zpoždění při příletu (vzestupně)
flights %>%
arrange(desc(dep_delay), arr_delay)
help(distinct)
# Pomocí funkce distinct() zjistěte, zda každý den v roce
# proběhl aspoň jeden let
flights %>%
distinct(month, day)
# Pomocí funkce distinct() zjistěte, zda každý den v roce
# proběhl aspoň jeden let
flights %>%
count(distinct(month, day))
# Pomocí funkce distinct() zjistěte, zda každý den v roce
# proběhl aspoň jeden let
flights %>%
distinct(month, day)
help(mutate)
help(.before)
help(before)
# Pomocí funkce mutate() doplňte do datasetu novou proměnnou speed,
# která bude udávat rychlost letadla v kilometrech za hodinu.
# Udělejte to tak, aby nově vytvořená proměnná byla zařazena na začátek datasetu
# a aby se změny uložily.
flights %>%
mutate(speed = 1, before )
# Pomocí funkce mutate() doplňte do datasetu novou proměnnou speed,
# která bude udávat rychlost letadla v kilometrech za hodinu.
# Udělejte to tak, aby nově vytvořená proměnná byla zařazena na začátek datasetu
# a aby se změny uložily.
flights %>%
mutate(speed = 1, .before = 1)
glimps(flights)
glimpse(flights)
# Pomocí funkce mutate() doplňte do datasetu novou proměnnou speed,
# která bude udávat rychlost letadla v kilometrech za hodinu.
# Udělejte to tak, aby nově vytvořená proměnná byla zařazena na začátek datasetu
# a aby se změny uložily.
flights %>%
mutate(speed = distance/(hour + (minute/60)), .before = 1)
# Pomocí funkce mutate() doplňte do datasetu novou proměnnou speed,
# která bude udávat rychlost letadla v kilometrech za hodinu.
# Udělejte to tak, aby nově vytvořená proměnná byla zařazena na začátek datasetu
# a aby se změny uložily.
flights %>%
mutate(speed = (distance/(hour + (minute/60))) * 1.609, .before = 1)
glimpse(flights)
glimpse(flights)
flights <- flights %>%
mutate(speed = (distance/(hour + (minute/60))) * 1.609, .before = 1)
glimpse(flights)
help(rename)
flights %>%
rename(speed_km_h = speed)
glimpse(flights)
flights <- flights %>%
rename(speed_km_h = speed)
glimpse(flights)
# Pomocí funkce relocate() přesuňte proměnnou speed_km_h za sloupce day
help(relocate)
flights %>%
relocate(speed_km_h, .afer = dav)
flights %>%
relocate(speed_km_h, .afer = day)
flights %>%
relocate(speed_km_h, .afer = 2)
flights %>%
relocate(speed_km_h, .afer = 1)
flights %>%
relocate(speed_km_h, .afer = "day")
glimpse(flights)
flights %>%
relocate(speed_km_h, .afer = "day")
flights %>%
relocate(speed_km_h)
flights %>%
relocate(speed_km_h, .after = day)
glimpse(flights)
# Pomocí funkce relocate() přesuňte proměnnou speed_km_h za sloupce day
flights <- flights %>%
relocate(speed_km_h, .after = day)
glimpse(flights)
help(select)
# Pomocí funkce select() z datasetu vyberte čtyři proměnné:
# dep_time, dep_delay, arr_time a arr_delay
# Zkuste vymyslet více než jeden způsob, jak toho dosáhnout.
flights %>%
select(dep_time, dep_delay)
# Pomocí funkce select() z datasetu vyberte čtyři proměnné:
# dep_time, dep_delay, arr_time a arr_delay
# Zkuste vymyslet více než jeden způsob, jak toho dosáhnout.
flights %>%
select(dep_time, dep_delay, arr_time, arr_delay)
help(where)
flights %>%
select(5, 7, 8, 10)
# Pomocí funkce select() z datasetu vyberte čtyři proměnné:
# dep_time, dep_delay, arr_time a arr_delay
# Zkuste vymyslet více než jeden způsob, jak toho dosáhnout.
flights %>%
select(dep_time, dep_delay, arr_time, arr_delay)
flights %>%
select(5, 7, 8, 10)
help(where)
help("starts_with")
flights %>%
select(where(starts_with("dep")))
flights %>%
select(starts_with("dep"))
flights %>%
select(starts_with("dep") %or% starts_with("arr"))
flights %>%
select(starts_with("dep") | starts_with("arr"))
flights %>%
select(5, 7, 8, 10)
# Pomocí funkce select() z datasetu vyberte čtyři proměnné:
# dep_time, dep_delay, arr_time a arr_delay
# Zkuste vymyslet více než jeden způsob, jak toho dosáhnout.
flights %>%
select(dep_time, dep_delay, arr_time, arr_delay)
